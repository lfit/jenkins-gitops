# Build and push Jenkins Docker image to GitHub Container Registry
name: Build and Push Jenkins Image

on:
  workflow_run:
    workflows: ["Validate Dockerfile"]
    types:
      - completed
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine registry and environment
        id: registry
        run: |
          if [[ "${{ github.repository }}" == "lfit/jenkins-gitops" ]]; then
            # Upstream repository - production registry
            REGISTRY="ghcr.io/lfit/jenkins"
            ENVIRONMENT="production"
          else
            # Fork repository - development registry
            REGISTRY="ghcr.io/${{ github.repository_owner }}/jenkins"
            ENVIRONMENT="development"
          fi

          TAG="main-$(echo ${{ github.sha }} | cut -c1-7)"
          echo "registry=$REGISTRY" >> $GITHUB_OUTPUT
          echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT
          echo "image-tag=$TAG" >> $GITHUB_OUTPUT
          echo "Using registry: $REGISTRY for $ENVIRONMENT environment"

      - name: Build and push Jenkins image
        uses: docker/build-push-action@v5
        with:
          context: ./build
          push: true
          tags: |
            ${{ steps.registry.outputs.registry }}:${{ steps.registry.outputs.image-tag }}
            ${{ steps.registry.outputs.registry }}:latest
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            environment=${{ steps.registry.outputs.environment }}
