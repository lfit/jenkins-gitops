---
# Name: values.yaml
# Purpose: Base Helm values for Jenkins wrapper chart configuration
# Description: Establishes default settings for persistence, service accounts,
# Jenkins controller image, and JCasC integration. Environment-specific
# overrides are handled in staging/production values.yaml files.
#
# persistence: EBS storage configuration for Jenkins data persistence
# serviceAccount: Kubernetes service account for Jenkins controller
# jenkins.controller.image: Container image configuration (lfit/jenkins)
# jenkins.controller.JCasC: Configuration as Code file loading via ConfigMap
# jenkins.controller.resources: CPU and memory resource allocation
# jenkins.controller.javaOpts: JVM optimization for containerized deployment

persistence:
  enabled: true
  # Size configured per environment: staging (4Gi), production (16Gi)
  # Environment-specific storage in: staging/values.yaml and production/values.yaml
  storageClass: "auto-ebs-sc"

serviceAccount:
  create: true
  name: ""

# Pass all configuration to Jenkins subchart
# Subchart dependency defined in: base/jenkins/Chart.yaml
jenkins:
  controller:
    # Security and authorization configuration managed via JCasC files
    # See: base/jenkins/jcasc_yamls/02-security.yaml (SAML SSO + project matrix authorization)
    # See: base/jenkins/jcasc_yamls/02-security-emergency.yaml (emergency local auth fallback)
    # See: base/jenkins/jcasc_yamls/06-credentials.yaml (1Password integration for GitHub tokens)

    # Container image configuration for Jenkins controller
    # Base layer provides defaults, environment layers control specific versions
    # Image versioning and pull policy controlled in: staging/values.yaml and production/values.yaml
    image:
      registry: "ghcr.io"
      repository: "lfit/jenkins"
      # tag: removed - environment layers specify exact versions
      # pullPolicy: moved to environment layers for environment-specific optimization

    # Use native Jenkins Helm chart fields instead of JCasC to avoid conflicts
    # Chart configuration defined in: base/jenkins/Chart.yaml dependencies
    numExecutors: 0
    executorMode: EXCLUSIVE

    # JCasC configuration loaded from external files via configMapRef
    # See: base/jenkins/jcasc_yamls/ directory for all configuration files
    # See: base/jenkins/templates/jcasc-configmap.yaml for file loading
    JCasC:
      defaultConfig: true
      # All configuration loaded from external files - no inline config

    # GitHub integration configuration (shared across all environments)
    # GitHub service account token and API settings
    containerEnv:
      - name: JCASC_GITHUB_API_URL
        value: "https://api.github.com"
      - name: JCASC_GITHUB_CREDENTIALS_ID
        value: "github-token"

    # Resource configuration and JVM options moved to environment layers
    # Environment-specific settings in: staging/values.yaml and production/values.yaml
