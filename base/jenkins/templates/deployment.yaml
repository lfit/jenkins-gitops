apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "jenkins.fullname" . }}
  labels:
    {{- include "jenkins.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "jenkins.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "jenkins.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "jenkins.serviceAccountName" . }}
      terminationGracePeriodSeconds: 60
      securityContext:
        fsGroup: 1000
      volumes:
        - name: jenkins-home
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "jenkins.fullname" . }}-home
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: jcasc-config
          emptyDir: {}
        - name: scripts
          emptyDir: {}
      containers:
        - name: jenkins
          image: "{{ .Values.jenkinsImage }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: agent
              containerPort: 50000
              protocol: TCP
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
            - name: jcasc-config
              mountPath: /var/jenkins_home/casc.d
        - name: jcasc-sidecar
          image: "{{ .Values.sidecarImage }}"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "-c"]
          args:
            - >
              echo "Sidecar started. Implement script cloning, cron, and reload logic here.";
              sleep infinity;
          volumeMounts:
            - name: jcasc-config
              mountPath: /var/jenkins_home/casc.d
            - name: scripts
              mountPath: /scripts
