---
# Name: production/values.yaml
# Purpose: Production environment Helm values for Jenkins wrapper chart configuration
# Description: Environment-specific overrides for production deployment including
# image versioning, resource allocation, JVM optimization, and JCasC variables.
# Inherits base configuration from base/jenkins/values.yaml.
#
# persistence.size: Production-appropriate storage allocation (16Gi)
# jenkins.controller.image: Production image tag and pull policy for reliability
# jenkins.controller.resources: Resource limits appropriate for production workloads
# jenkins.controller.javaOpts: JVM tuning for production memory allocation
# jenkins.controller.containerEnv: Environment variables for JCasC configuration
# jenkins.controller.ingress: External access configuration for production environment

# Production-specific persistence configuration
# Storage size configured in jenkins.persistence section below

# Jenkins subchart configuration overrides
# Inherits base configuration from: base/jenkins/values.yaml
jenkins:
  # Service account configuration for AWS IAM role assumption
  serviceAccount:
    annotations:
      "eks.amazonaws.com/role-arn": "arn:aws:iam::156041419073:role/jenkins-prod-irsa"

  controller:
    # Container image configuration for production environment
    # Uses specific commit SHA for production stability
    # Pull policy set to Always for latest security updates
    image:
      registry: "ghcr.io"
      repository: "lfit/jenkins"
      tag: "main-990a6cc"
      pullPolicy: "Always"

    # Plugin management - use only plugins baked into image
    # Prevents plugin version conflicts in production environment
    installPlugins: false

    # Jenkins Configuration as Code
    JCasC:
      defaultConfig: false
      configScripts:
        # OFFICIAL MULTIPLE ROOT KEYS PATTERN
        # Organizes configurations by root key type to eliminate merge conflicts
        # Based on jenkinsci/configuration-as-code-plugin official documentation

        jenkins-config: |
          jenkins:
            # System message configuration
            systemMessage: |
              1Password Integration Status:
              - Plugin: OnePassword Integration for Build Secrets
              - Service Account: Available via onepassword-sa-token cluster secret
              - GitHub Token: opensearch-jenkins service account configured

            # Global environment variables available to all Jenkins jobs
            globalNodeProperties:
              - envVars:
                  env:
                    - key: "RELEASE_EMAIL"
                      value: '${JCASC_RELEASE_EMAIL:-noreply@opensearch.org}'
                    - key: "WORKSPACE_CLEANUP"
                      value: '${JCASC_WORKSPACE_CLEANUP:-true}'
                    - key: "DISABLE_DEFERRED_WIPEOUT"
                      value: '${JCASC_DISABLE_DEFERRED_WIPEOUT:-false}'
                    - key: "AWS_REGION"
                      value: '${JCASC_AWS_REGION:-us-west-2}'
                    - key: "GIT_BASE"
                      value: '${JCASC_GIT_BASE:-https://github.com}'
                    - key: "GIT_URL"
                      value: '${JCASC_GIT_URL:-https://github.com}'
                    - key: "GITHUB_API_URL"
                      value: '${JCASC_GITHUB_API_URL:-https://api.github.com}'
                    - key: "LANG"
                      value: '${JCASC_LANG:-C.UTF-8}'
                    - key: "CI_ENVIRONMENT"
                      value: '${JCASC_SILO}'
                    - key: "JENKINS_URL"
                      value: '${JCASC_JENKINS_URL}'
                    - key: "JCASC_GITHUB_CREDENTIALS_ID"
                      value: "github-token"
                    - key: "SAML_METADATA_URL"
                      value: '${SAML_METADATA_URL}'
                    - key: "SAML_LOGOUT_URL"
                      value: '${SAML_LOGOUT_URL}'

            # CSRF protection configuration
            crumbIssuer:
              standard:
                excludeClientIPFromCrumb: false

            # Disable "Remember me" for enhanced security
            disableRememberMe: true

            # SAML SSO authentication via Linux Foundation identity provider
            securityRealm:
              saml:
                binding: "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect"
                displayNameAttributeName: "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name"
                emailAttributeName: "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress"
                groupsAttributeName: "http://schemas.xmlsoap.org/claims/Group"
                idpMetadataConfiguration:
                  period: 60
                  url: "${SAML_METADATA_URL}"
                logoutUrl: "${SAML_LOGOUT_URL}"
                maximumAuthenticationLifetime: 86400

            # Kubernetes cloud configuration for dynamic build agents
            clouds:
              - kubernetes:
                  name: "kubernetes"
                  serverUrl: "${JCASC_KUBERNETES_URL:-https://kubernetes.default.svc.cluster.local}"
                  namespace: "${JCASC_KUBERNETES_NAMESPACE:-default}"
                  credentialsId: ""
                  jenkinsUrl: "${JCASC_KUBERNETES_JENKINS_URL:-http://jenkins:8080}"
                  jenkinsTunnel: "${JCASC_KUBERNETES_JENKINS_TUNNEL:-jenkins:50000}"
                  containerCap: 10
                  maxRequestsPerHostStr: "32"
                  retentionTimeout: 180
                  connectTimeout: 10
                  readTimeout: 20
                  waitForPodSec: 600
                  usageRestricted: false
                  garbageCollection:
                    timeout: 300
                  podLabels:
                    - key: "jenkins"
                      value: "slave"
                    - key: "app.kubernetes.io/managed-by"
                      value: "jenkins"
                    - key: "app.kubernetes.io/part-of"
                      value: "cicd"
                  templates:
                    - name: "default-agent"
                      label: "kubernetes"
                      nodeUsageMode: "NORMAL"
                      containers:
                        - name: "jnlp"
                          image: "jenkins/inbound-agent:latest"
                          args: "^${computer.jnlpmac} ^${computer.name}"
                          resourceRequestCpu: "200m"
                          resourceRequestMemory: "256Mi"
                          resourceLimitCpu: "500m"

        credentials-config: |
          credentials:
            system:
              domainCredentials:
                - credentials:
                  # 1Password Service Account Token (standard string credential)
                  - string:
                      id: "onepassword-service-account"
                      description: "1Password service account token for secret access"
                      secret: "${ONEPASSWORD_SA_TOKEN:-}"

                  # GitHub Service Account Token for CI/CD Operations
                  - string:
                      id: "${GITHUB_CREDENTIALS_ID}"
                      description: "GitHub opensearch-jenkins service account token"
                      secret: "op://OpenSearch Project/opensearch-jenkins-github-token/password"

                  # SSH Private Key for OpenSearch EC2 Agents
                  - basicSSHUserPrivateKey:
                      scope: GLOBAL
                      id: "opensearch-ec2-key"
                      username: "ec2-user"
                      description: "SSH key for OpenSearch EC2 agents"
                      privateKeySource:
                        directEntry:
                          privateKey: "${op://OpenSearch Project/opensearch-jenkins-ec2-key/private key}"

        unclassified-config: |
          unclassified:
            # GitHub plugin configuration
            gitHubConfiguration:
              apiRateLimitChecker: ThrottleForNormalize

            gitHubPluginConfig:
              configs:
                - name: "opensearch-project"
                  credentialsId: "${GITHUB_CREDENTIALS_ID}"
              hookUrl: "${JENKINS_URL}/github-webhook/"

            # GitHub Pull Request Builder configuration
            ghprbTrigger:
              cron: "H/5 * * * *"
              githubAuth:
                - id: "opensearch-project-ghprb-auth"
                  serverAPIUrl: "${GITHUB_API_URL}"
                  credentialsId: "${GITHUB_CREDENTIALS_ID}"
                  description: "GitHub auth for opensearch-project PR builder"
              adminlist: ""
              manageWebhooks: false
              okToTestPhrase: ".*ok to test.*"
              retestPhrase: ".*test this please.*"
              skipBuildPhrase: ".*\\[skip ci\\].*"

        tool-config: |
          tool:
            # Java Development Kit configuration
            jdk:
              installations:
                - name: "jdk-17"
                  home: "/opt/java/openjdk"

            # Git version control system configuration
            git:
              installations:
                - name: "Default"
                  home: "git"

    # Resource allocation for production environment
    # Higher resource limits appropriate for production workloads
    resources:
      requests:
        cpu: "2000m"
        memory: "4Gi"
      limits:
        cpu: "4000m"
        memory: "8Gi"

    # JVM optimization for production environment
    # Memory settings aligned with resource limits above
    javaOpts: >-
      -XX:+UseG1GC
      -XX:+UseStringDeduplication
      -XX:+ParallelRefProcEnabled
      -XX:+DisableExplicitGC
      -XX:+UnlockExperimentalVMOptions
      -XX:G1NewSizePercent=20
      -XX:+UnlockDiagnosticVMOptions
      -XX:G1MixedGCCountTarget=16
      -XX:G1MixedGCLiveThresholdPercent=90
      -XX:G1RSetUpdatingPauseTimePercent=5
      -XX:G1HeapRegionSize=32M
      -Xmx6g
      -XX:MaxMetaspaceSize=512m

    # Environment variables for Jenkins container (JCasC configuration)
    # Variables consumed by: base/jenkins/jcasc_yamls/ configuration files
    # Environment-specific values for production deployment context
    containerEnv:
      # System Configuration (01-global-env-vars.yaml)
      - name: JCASC_SILO
        value: "production"
      - name: JCASC_JENKINS_URL
        value: "https://jenkins.opensearch.cluster.linuxfound.info/"
      - name: JENKINS_URL
        value: "https://jenkins.opensearch.cluster.linuxfound.info/"
      - name: JCASC_LOCATION_URL
        value: ""
      - name: JCASC_LOCATION_ADMINADDRESS
        value: ""
      - name: JCASC_SYSTEM_MESSAGE
        value: "Welcome to Jenkins (Production Environment)"
      - name: JCASC_MASTER_LABELS
        value: "prod-controller"
      - name: JCASC_RESOURCE_ROOT_URL
        value: ""

      # Build and Performance Configuration
      - name: JCASC_BUILD_TIMEOUT
        value: "7200"
      - name: JCASC_MAVEN_OPTS
        value: "-Xmx4096m -XX:MaxMetaspaceSize=1024m"
      - name: JCASC_NODE_OPTIONS
        value: "--max-old-space-size=8192"
      - name: JCASC_SCM_POLLING_THREADCOUNT
        value: "10"

      # Integration Configuration (placeholders for future configuration)
      - name: JCASC_LOG_LEVEL
        value: "ERROR"
      - name: JCASC_ARTIFACTORY_URL
        value: ""
      - name: JCASC_DOCKER_REGISTRY
        value: ""
      - name: GITHUB_CREDENTIALS_ID
        value: "github-token"
      - name: JCASC_S3_BUCKET
        value: ""
      - name: JCASC_CDN_URL
        value: ""
      - name: JCASC_ARTIFACTS_RETENTION_DAYS
        value: ""
      - name: JCASC_ECR_REGISTRY_URL
        value: ""

      # Security Configuration (02-security.yaml integration)
      - name: JCASC_ADMIN_PASSWORD
        valueFrom:
          secretKeyRef:
            name: jenkins-lf-admin
            key: admin-password

      # SAML Configuration
      - name: SAML_METADATA_URL
        value: "https://sso.linuxfoundation.org/samlp/metadata/Sa8MIoI91JUE3154tjDzTATsEeiehGaZ"
      - name: SAML_LOGOUT_URL
        value: "https://sso.linuxfoundation.org/samlp/Sa8MIoI91JUE3154tjDzTATsEeiehGaZ/logout"

      # 1Password Service Account Token (ESO-managed)
      - name: ONEPASSWORD_SA_TOKEN
        valueFrom:
          secretKeyRef:
            name: onepassword-sa-token
            key: token

      # GitHub Credentials Configuration
      - name: JCASC_GITHUB_CREDENTIALS_ID
        value: "github-token"

      # Kubernetes Cloud Configuration (07-cloud-agents.yaml integration)
      - name: JCASC_KUBERNETES_URL
        value: "https://kubernetes.default.svc.cluster.local"
      - name: JCASC_KUBERNETES_NAMESPACE
        value: "jenkins-prod"
      - name: JCASC_KUBERNETES_JENKINS_URL
        value: "http://jenkins-prod.jenkins-prod.svc.cluster.local:8080"
      - name: JCASC_KUBERNETES_JENKINS_TUNNEL
        value: "jenkins-prod-agent.jenkins-prod.svc.cluster.local:50000"

    # External access configuration for production environment
    # Provides public access for production workflows
    ingress:
      enabled: true
      apiVersion: networking.k8s.io/v1
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
      hostName: jenkins.opensearch.cluster.linuxfound.info
      path: /
      tls:
        - secretName: jenkins-production-tls
          hosts:
            - jenkins.opensearch.cluster.linuxfound.info

  # Defining resource requests and limits for the production environment.
  resources:
    requests:
      cpu: "2000m"
      memory: "4Gi"
    limits:
      cpu: "4000m"
      memory: "8Gi"

  jenkinsJavaOpts: "-Xms2g -Xmx6g"

  persistence:
    enabled: true
    storageClass: "auto-ebs-sc"
    size: "16Gi"
